---
resources:
  App\Entity\Tenant\PlaylistSlide:
    attributes:
      output: App\Dto\PlaylistSlide
    itemOperations:
      get:
        # It needs to be here to generate id's in the collection lists.
        path: '/playlist-slides/{id}'
        controller: App\Controller\NotFoundAction

      delete:
        path: '/playlists/{id}/slides/{slideId}'
        controller: App\Controller\PlaylistSlideDeleteController
        read: false
        deserialize: false
        validate: false
        openapi_context:
          description: Delete a slide from a playlist.
          summary: Delete a slide from a playlist.
          operationId: delete-v1-playlist-slide-id
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: slideId
              in: path
              required: true

      put:
        path: '/playlists/{id}/slides'
        controller: App\Controller\PlaylistSlidePutController
        read: false
        deserialize: false
        validate: false
        openapi_context:
          description: Update the collection of slide on a playlist.
          summary: Update the collection of slide on a playlist.
          operationId: put-v1-playlist-slide-id
          tags:
            - Playlists
          requestBody:
            content:
              application/ld+json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      slide:
                        type: string
                        format: ulid
                        pattern: "^[A-Za-z0-9]{26}$"
                        description: Slide ULID
                      weight:
                        type: integer
          responses:
            '201':
              description: Created
              content:
                application/ld+json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        slide:
                          type: string
                        playlist:
                          type: string
                        weight:
                          type: integer

    collectionOperations:
      getSlidePlaylist:
        method: GET
        filters: ['entity.search_filter', 'entity.blameable_filter', 'entity.published.date_filter', 'entity.order_filter', 'created.at.order_filter', 'updated.at.order_filter']
        path: '/slides/{id}/playlists'
        controller: App\Controller\SlidePlaylistGetController
        read: false
        deserialize: false
        validate: false
        openapi_context:
          description: Get the collection of playlist on a slide.
          summary: Get the collection of playlist on a slide.
          operationId: put-v1-slide-playlist-id
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
            - schema:
                type: integer
                minimum: 0
                format: int32
                default: 1
              in: query
              name: page
            - schema:
                type: string
                default: '10'
              in: query
              name: itemsPerPage
              description: The number of items per page


      putSlidePlaylist:
        method: PUT
        filters: ['entity.search_filter', 'entity.blameable_filter', 'entity.published.date_filter', 'entity.order_filter', 'created.at.order_filter', 'updated.at.order_filter']
        path: '/slides/{id}/playlists'
        controller: App\Controller\SlidePlaylistPutController
        read: false
        deserialize: false
        validate: false
        openapi_context:
          description: Retrieves collection of playlist resources.
          summary: Retrieves collection of playlistresources.
          operationId: get-v1-slide-playlist-id
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
          requestBody:
            content:
              application/ld+json:
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      playlist:
                        type: string
                        format: ulid
                        pattern: "^[A-Za-z0-9]{26}$"
                        description: Playlist ULID

      get:
        filters: ['entity.search_filter', 'entity.blameable_filter', 'entity.published.date_filter', 'entity.order_filter', 'created.at.order_filter', 'updated.at.order_filter']
        path: '/playlists/{id}/slides'
        controller: App\Controller\PlaylistSlideGetController
        read: false
        deserialize: false
        validate: false
        openapi_context:
          description: Retrieves collection of weight Slide resources.
          summary: Retrieves collection of weight Slide resources.
          operationId: get-v1-playlist-slide-id
          tags:
            - Playlists
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
            - schema:
                type: integer
                minimum: 0
                format: int32
                default: 1
              in: query
              name: page
              required: true
            - schema:
                type: string
                default: '10'
              in: query
              name: itemsPerPage
              description: The number of items per page
          responses:
            '200':
              description: OK
              headers: { }
