---
resources:
  App\Entity\Tenant\Media:
    attributes:
      output: App\Dto\Media
    itemOperations:
      get:
        openapi_context:
          description: Retrieves a Media resource.
          summary: Retrieve a Media resource.
          operationId: get-v1-media-id
          tags:
            - Media
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true
          responses:
            '200':
              description: OK
              headers: { }
#      put: ~
      delete:
        openapi_context:
          description: Delete a Media resource.
          summary: Delete a Media resource.
          operationId: delete-v1-media-id
          tags:
            - Media
          parameters:
            - schema:
                type: string
                format: ulid
                pattern: "^[A-Za-z0-9]{26}$"
              name: id
              in: path
              required: true

    collectionOperations:
      get:
        filters: ['entity.search_filter', 'entity.blameable_filter', 'entity.order_filter', 'created.at.order_filter', 'updated.at.order_filter']
        openapi_context:
          description: Retrieve a collection of Media resources.
          summary: Retrieves a collection of Media resources.
          tags:
            - Media
          operationId: get-v1-medias
          parameters:
            - schema:
                type: integer
                minimum: 0
                format: int32
                default: 1
              in: query
              name: page
            - schema:
                type: string
                default: '10'
              in: query
              name: itemsPerPage
              description: The number of items per page
          responses:
            '200':
              description: OK
              content:
                application/ld+json:
                  examples:

              headers: { }

      post:
        controller: App\Controller\MediaController
        deserialize: false
        openapi_context:
          tags:
            - Media
          requestBody:
            content:
              multipart/form-data:
                schema:
                  type: object
                  required:
                    - title
                    - description
                    - license
                    - file
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    license:
                      type: string
                    file:
                      type: string
                      format: binary
